# eslint: 5.16.0

env:
    node: true
    es6: true

rules:
    # See: http://eslint.org/docs/rules/

    # Possible Errors
    # These rules relate to possible syntax or logic errors in JavaScript code:

    for-direction: "error"
    getter-return: "error"
    no-async-promise-executor: "error"
    no-await-in-loop: "error"
    no-compare-neg-zero: "error"
    no-cond-assign: ["error", always]
    no-console: "error"
    no-constant-condition: ["error", { checkLoops: false }]
    no-control-regex: "error"
    no-debugger: "error"
    no-dupe-args: "error"
    no-dupe-keys: "error"
    no-duplicate-case: "error"
    no-empty: "error"
    no-empty-character-class: "error"
    no-ex-assign: "error"
    no-extra-boolean-cast: "error"
    no-extra-parens: "off"
    no-extra-semi: "error"
    no-func-assign: "error"
    no-inner-declarations: "error"
    no-invalid-regexp: "error"
    no-irregular-whitespace: "error"
    no-misleading-character-class: "error"
    no-obj-calls: "error"
    no-prototype-builtins: "off"
    no-regex-spaces: "error"
    no-sparse-arrays: "error"
    no-template-curly-in-string: "error"
    no-unexpected-multiline: "error"
    no-unreachable: "error"
    no-unsafe-finally: "error"
    no-unsafe-negation: "error"
    require-atomic-updates: "error"
    use-isnan: "error"
    valid-typeof: "error"

    # Best Practices
    # These rules relate to better ways of doing things to help you avoid problems:

    accessor-pairs: "off"
    array-callback-return: "error"
    block-scoped-var: "error"
    class-methods-use-this: "error"
    complexity: ["warn", 18]
    consistent-return: "off"
    curly: ["error", "all"]
    default-case: "off"
    dot-location: ["error", "property"]
    dot-notation: "error"
    eqeqeq: "error"
    guard-for-in: "error"
    max-classes-per-file: "error"
    no-alert: "error"
    no-caller: "error"
    no-case-declarations: "error"
    no-div-regex: "error"
    no-else-return: "error"
    no-empty-function: "error"
    no-empty-pattern: "error"
    no-eq-null: "error"
    no-eval: "error"
    no-extend-native: "error"
    no-extra-bind: "error"
    no-extra-label: "error"
    no-fallthrough: "off"
    no-floating-decimal: "error"
    no-global-assign: "error"
    no-implicit-coercion: "error"
    no-implicit-globals: "error"
    no-implied-eval: "error"
    no-invalid-this: "error"
    no-iterator: "error"
    no-labels: "error"
    no-lone-blocks: "error"
    no-loop-func: "error"
    no-magic-numbers: "off"
    no-multi-spaces: ["error", { ignoreEOLComments: true }]
    no-multi-str: "error"
    no-new: "error"
    no-new-func: "error"
    no-new-wrappers: "error"
    no-octal: "error"
    no-octal-escape: "error"
    no-param-reassign: "off"
    no-proto: "error"
    no-redeclare: "error"
    no-restricted-properties: "off"
    no-return-assign: "off"
    no-return-await: "off"
    no-script-url: "error"
    no-self-assign: "error"
    no-self-compare: "error"
    no-sequences: "error"
    no-throw-literal: "error"
    no-unmodified-loop-condition: "error"
    no-unused-expressions: "error"
    no-unused-labels: "error"
    no-useless-call: "error"
    no-useless-catch: "error"
    no-useless-concat: "error"
    no-useless-escape: "error"
    no-useless-return: "error"
    no-void: "error"
    no-warning-comments: "warn"
    no-with: "error"
    prefer-named-capture-group: "error"
    prefer-promise-reject-errors: "error"
    radix: "error"
    require-await: "error"
    require-unicode-regexp: "error"
    vars-on-top: "off"
    wrap-iife: ["error", "outside"]
    yoda: "error"

    # Strict Mode
    # These rules relate to strict mode directives:

    strict: ["error", "global"]

    # Variables
    # These rules relate to variable declarations:

    init-declarations: "off"
    no-delete-var: "error"
    no-label-var: "error"
    no-restricted-globals: "off"
    no-shadow: "off"
    no-shadow-restricted-names: "error"
    no-undef: "error"
    no-undef-init: "error"
    no-undefined: "off"
    no-unused-vars: "error"
    no-use-before-define: "error"

    # Node.js and CommonJS
    # These rules relate to code running in Node.js, or in browsers with CommonJS:

    callback-return: "error"
    global-require: "off"
    handle-callback-err: ["error", "^(err|error)$"]
    no-buffer-constructor: "error"
    no-mixed-requires: "error"
    no-new-require: "error"
    no-path-concat: "error"
    no-process-env: "off"
    no-process-exit: "error"
    no-restricted-modules: "off"
    no-sync: "off"

    # Stylistic Issues
    # These rules relate to style guidelines, and are therefore quite subjective:

    array-bracket-newline: "off"
    array-bracket-spacing: ["error", "never"]
    array-element-newline: "off"
    block-spacing: ["error", "always"]
    brace-style: ["error", "1tbs"]
    camelcase: "error"
    capitalized-comments: "off"
    comma-dangle: ["error", "never"]
    comma-spacing: ["error", { before: false, after: true }]
    comma-style: ["error", "last"]
    computed-property-spacing: ["error", "never"]
    consistent-this: ["error", "that"]
    eol-last: "error"
    func-call-spacing: "error"
    func-name-matching: "off"
    func-names: "off"
    func-style: ["error", "declaration"]
    function-paren-newline: ["error", "consistent"]
    id-blacklist: "off"
    id-length: "off"
    id-match: "off"
    implicit-arrow-linebreak: ["error", "beside"]
    indent: ["error", "tab", { "SwitchCase": 1 }]
    jsx-quotes: "error"
    key-spacing: ["error", { beforeColon: false, afterColon: true, mode: strict }]
    keyword-spacing: ["error", { before: true, after: true }]
    line-comment-position: "off"
    linebreak-style: ["error", "unix"]
    lines-around-comment: ["error", { beforeBlockComment: true, allowBlockStart: true }]
    lines-between-class-members: ["error", "always", { exceptAfterSingleLine: true }]
    max-depth: ["warn", 6]
    max-len: ["error", { code: 120, tabWidth: 1, ignoreUrls: true }]
    max-lines: ["warn", { max: 1000, skipBlankLines: true, skipComments: true }]
    max-lines-per-function: ["warn", 50]
    max-nested-callbacks: ["warn", 6]
    max-params: "off"
    max-statements: "off"
    max-statements-per-line: ["error", { max: 1 }]
    multiline-comment-style: "off"
    multiline-ternary: "off"
    new-cap: "error"
    new-parens: "error"
    newline-per-chained-call: "off"
    no-array-constructor: "off"
    no-bitwise: "off"
    no-continue: "off"
    no-inline-comments: "off"
    no-lonely-if: "error"
    no-mixed-operators: "error"
    no-mixed-spaces-and-tabs: ["error", "smart-tabs"]
    no-multi-assign: "off"
    no-multiple-empty-lines: "error"
    no-negated-condition: "error"
    no-nested-ternary: "error"
    no-new-object: "error"
    no-plusplus: "error"
    no-restricted-syntax: "error"
    no-tabs: "off"
    no-ternary: "off"
    no-trailing-spaces: "error"
    no-underscore-dangle: "off"
    no-unneeded-ternary: "error"
    no-whitespace-before-property: "error"
    nonblock-statement-body-position: "off"
    object-curly-newline: "off"
    object-curly-spacing: ["error", "always"]
    object-property-newline: "off"
    one-var: "off"
    one-var-declaration-per-line: "off"
    operator-assignment: "error"
    operator-linebreak: ["error", "after"]
    padded-blocks: ["error", "never"]
    padding-line-between-statements: "off"
    prefer-object-spread: "error"
    quote-props: ["error", "as-needed"]
    quotes: ["error", "single"]
    semi: ["error", "always"]
    semi-spacing: ["error", { before: false, after: true }]
    semi-style: "error"
    sort-keys: "off"
    sort-vars: "off"
    space-before-blocks: ["error", "always"]
    space-before-function-paren: ["error", { anonymous: "ignore", named: "never", asyncArrow: "always" }]
    space-in-parens: ["error", "never"]
    space-infix-ops: "error"
    space-unary-ops: ["error", { words: true, nonwords: false }]
    spaced-comment: ["error", "always"]
    switch-colon-spacing: "error"
    template-tag-spacing: "error"
    unicode-bom: "error"
    wrap-regex: "off"

    # ECMAScript 6
    # These rules relate to ES6, also known as ES2015:

    arrow-body-style: ["error", "always"]
    arrow-parens: ["error", "always"]
    arrow-spacing: "error"
    constructor-super: "error"
    generator-star-spacing: "error"
    no-class-assign: "error"
    no-confusing-arrow: "error"
    no-const-assign: "error"
    no-dupe-class-members: "error"
    no-duplicate-imports: "error"
    no-new-symbol: "error"
    no-restricted-imports: "off"
    no-this-before-super: "error"
    no-useless-computed-key: "error"
    no-useless-constructor: "error"
    no-useless-rename: "error"
    no-var: "error"
    object-shorthand: "error"
    prefer-arrow-callback: "error"
    prefer-const: "error"
    prefer-destructuring: "off"
    prefer-numeric-literals: "error"
    prefer-rest-params: "error"
    prefer-spread: "error"
    prefer-template: "error"
    require-yield: "error"
    rest-spread-spacing: ["error", never]
    sort-imports: "off"
    symbol-description: "off"
    template-curly-spacing: ["error", never]
    yield-star-spacing: ["error", after]
